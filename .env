# ================== DATABASE CONFIGURATION ==================
# Development: SQLite (DO NOT USE IN PRODUCTION)
DATABASE_URL=sqlite:///./test.db
ASYNC_DATABASE_URL=sqlite+aiosqlite:///./test.db

# Production: PostgreSQL (REQUIRED)
# ðŸ”’ SECURITY: Use encrypted connection strings and strong credentials
# DATABASE_URL=${DATABASE_URL:-postgresql://ai_teddy_user:${DB_PASSWORD}@${DB_HOST:-localhost}:${DB_PORT:-5432}/${DB_NAME:-ai_teddy}?sslmode=require}
DB_PASSWORD=${DB_PASSWORD:-}
DB_HOST=${DB_HOST:-localhost}
DB_PORT=${DB_PORT:-5432}
DB_NAME=${DB_NAME:-ai_teddy}

# ================== REDIS CONFIGURATION ==================
REDIS_URL=${REDIS_URL:-redis://redis:6379/0}

# ================== JWT CONFIGURATION ==================
# ðŸ”’ SECURITY: Generate strong secrets using: python -c "import secrets; print(secrets.token_urlsafe(32))"
# CRITICAL: These must be set in environment variables or secure secrets management
JWT_SECRET=${JWT_SECRET:-}
JWT_ALGORITHM=HS256
JWT_EXPIRE_MINUTES=30
# Additional JWT security
JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET:-}
JWT_REFRESH_EXPIRE_DAYS=30
COPPA_ENCRYPTION_KEY=changeme123456789changeme123456789
# ================== API KEYS (use environment variables only) ==================
# ðŸš¨ IMPORTANT: Do not put real API keys in this file!
# Use environment variables or a secure secrets management system
OPENAI_API_KEY=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
ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY:-}
WHISPER_MODEL=medium
ENVIRONMENT=development
DEBUG=false
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7
# ================== SECURITY CONFIGURATION ==================
# COPPA Compliance
COPPA_ENABLED=true
MAX_CHILD_AGE=12
PARENTAL_CONSENT_REQUIRED=true

# Rate Limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=60
RATE_LIMIT_BURST=10

# Content Filtering
CONTENT_FILTER_STRICT_MODE=true
SAFETY_THRESHOLD=0.8

# ================== LOGGING CONFIGURATION ==================
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=logs/ai_teddy.log

# ================== ENVIRONMENT ==================
ENVIRONMENT=development
DEBUG=false

# ================== CORS CONFIGURATION ==================
ALLOWED_ORIGINS=["https://app.aiteddybear.com", "https://api.aiteddybear.com"]
ALLOWED_METHODS=["GET", "POST", "PUT", "DELETE"]
ALLOWED_HEADERS=["*"]

# ================== SESSION CONFIGURATION ==================
# ðŸ”’ SECURITY: Generate strong session secret using: python -c "import secrets; print(secrets.token_urlsafe(32))"
SESSION_SECRET=${SESSION_SECRET:-}
SESSION_EXPIRE_HOURS=24
SESSION_SECURE=true
SESSION_HTTPONLY=true
SESSION_SAMESITE=strict

# ================== MONITORING ==================
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090

# ================== KAFKA CONFIGURATION ==================
KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS:-kafka:9092}
SCHEMA_REGISTRY_URL=${SCHEMA_REGISTRY_URL:-http://schema-registry:8081}
KAFKA_ENABLED=false

# ================== VAULT CONFIGURATION ==================
VAULT_URL=${VAULT_URL:-http://vault:8200}
VAULT_TOKEN=${VAULT_TOKEN:-}
VAULT_ENABLED=false

# ================== FEATURE FLAGS ==================
ENABLE_DATABASE=true
ENABLE_REDIS=true
ENABLE_AI_SERVICES=true
USE_MOCK_SERVICES=false

# ðŸ”’ SECURITY: All secrets below MUST be set via environment variables
# Generate using: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=${SECRET_KEY:-}
JWT_SECRET_KEY=${JWT_SECRET_KEY:-}
ENCRYPTION_KEY=${ENCRYPTION_KEY:-}

# ================== DATA ENCRYPTION ==================
# ðŸ”’ SECURITY: For encrypting sensitive data like medical notes
DATA_ENCRYPTION_KEY=${DATA_ENCRYPTION_KEY:-}
FIELD_ENCRYPTION_KEY=${FIELD_ENCRYPTION_KEY:-}

# ================== COPPA COMPLIANCE ==================
# Data retention and deletion
DATA_RETENTION_DAYS=90
AUTO_DELETE_ENABLED=true
DATA_EXPORT_ENABLED=true